// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders custom chat interface correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <h3
        class="MuiTypography-root MuiTypography-h3 css-13msox4-MuiTypography-root"
      >
        Send a Custom message
      </h3>
      <p
        class="MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"
      >
        You can only send messages to users you have received messages from.
      </p>
      <div
        class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorPrimary MuiSelect-root css-1ln7fuk-MuiInputBase-root-MuiOutlinedInput-root-MuiSelect-root"
      >
        <div
          aria-expanded="false"
          aria-haspopup="listbox"
          class="MuiSelect-select MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input css-18jp67o-MuiNativeSelect-root-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input"
          role="combobox"
          tabindex="0"
        >
          Select a value
        </div>
        <input
          aria-hidden="true"
          aria-invalid="false"
          class="MuiSelect-nativeInput css-j0riat-MuiSelect-nativeInput"
          tabindex="-1"
          value="0"
        />
        <svg
          aria-hidden="true"
          class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiSelect-icon MuiSelect-iconOutlined css-1rfqz7c-MuiSvgIcon-root-MuiNativeSelect-root-MuiSelect-icon"
          data-testid="ArrowDropDownIcon"
          focusable="false"
          viewBox="0 0 24 24"
        >
          <path
            d="M7 10l5 5 5-5z"
          />
        </svg>
        <fieldset
          aria-hidden="true"
          class="MuiOutlinedInput-notchedOutline css-18p5xg2-MuiNotchedOutlined-root-MuiOutlinedInput-notchedOutline"
        >
          <legend
            class="css-1nf2c5d-MuiNotchedOutlined-root"
          >
            <span
              aria-hidden="true"
              class="notranslate"
            >
              ​
            </span>
          </legend>
        </fieldset>
      </div>
      <div
        class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorPrimary css-1i753ds-MuiInputBase-root-MuiInput-root"
      >
        <input
          class="MuiInputBase-input MuiInput-input css-1yrc8ca-MuiInputBase-input-MuiInput-input"
          type="text"
          value=""
        />
      </div>
      <button
        class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSuccess MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSuccess css-17fwciq-MuiButtonBase-root-MuiButton-root"
        tabindex="0"
        type="button"
      >
        Send
      </button>
    </div>
  </body>,
  "container": <div>
    <h3
      class="MuiTypography-root MuiTypography-h3 css-13msox4-MuiTypography-root"
    >
      Send a Custom message
    </h3>
    <p
      class="MuiTypography-root MuiTypography-body1 css-rizt0-MuiTypography-root"
    >
      You can only send messages to users you have received messages from.
    </p>
    <div
      class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorPrimary MuiSelect-root css-1ln7fuk-MuiInputBase-root-MuiOutlinedInput-root-MuiSelect-root"
    >
      <div
        aria-expanded="false"
        aria-haspopup="listbox"
        class="MuiSelect-select MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input css-18jp67o-MuiNativeSelect-root-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input"
        role="combobox"
        tabindex="0"
      >
        Select a value
      </div>
      <input
        aria-hidden="true"
        aria-invalid="false"
        class="MuiSelect-nativeInput css-j0riat-MuiSelect-nativeInput"
        tabindex="-1"
        value="0"
      />
      <svg
        aria-hidden="true"
        class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium MuiSelect-icon MuiSelect-iconOutlined css-1rfqz7c-MuiSvgIcon-root-MuiNativeSelect-root-MuiSelect-icon"
        data-testid="ArrowDropDownIcon"
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7 10l5 5 5-5z"
        />
      </svg>
      <fieldset
        aria-hidden="true"
        class="MuiOutlinedInput-notchedOutline css-18p5xg2-MuiNotchedOutlined-root-MuiOutlinedInput-notchedOutline"
      >
        <legend
          class="css-1nf2c5d-MuiNotchedOutlined-root"
        >
          <span
            aria-hidden="true"
            class="notranslate"
          >
            ​
          </span>
        </legend>
      </fieldset>
    </div>
    <div
      class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorPrimary css-1i753ds-MuiInputBase-root-MuiInput-root"
    >
      <input
        class="MuiInputBase-input MuiInput-input css-1yrc8ca-MuiInputBase-input-MuiInput-input"
        type="text"
        value=""
      />
    </div>
    <button
      class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSuccess MuiButton-root MuiButton-contained MuiButton-containedSuccess MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorSuccess css-17fwciq-MuiButtonBase-root-MuiButton-root"
      tabindex="0"
      type="button"
    >
      Send
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": Object {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;
